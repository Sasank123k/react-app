from pptx import Presentation
from pptx.util import Inches, Pt

# Create a new presentation
prs = Presentation()

# Helper function to add a text box with custom formatting
def add_textbox(slide, left, top, width, height, text, font_size=16):
    textbox = slide.shapes.add_textbox(left, top, width, height)
    tf = textbox.text_frame
    tf.text = text
    for paragraph in tf.paragraphs:
        for run in paragraph.runs:
            run.font.size = Pt(font_size)
    return textbox

# Slide 1: Title Slide
slide = prs.slides.add_slide(prs.slide_layouts[0])
slide.shapes.title.text = "Integration Options for GitHub Push"
subtitle = slide.placeholders[1]
subtitle.text = "My Analysis of Various Approaches"

# Slide 2: Agenda
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Agenda"
agenda_text = (
    "• Use Case Overview\n"
    "• Personal Access Tokens (PATs)\n"
    "• OAuth Apps\n"
    "• API Access Blocker for OAuth\n"
    "• GitHub Apps\n"
    "• Git CLI\n"
    "• Conclusion & Recommendations\n"
    "• Q&A"
)
slide.placeholders[1].text = agenda_text

# Slide 3: Use Case Overview
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Use Case Overview"
use_case_text = (
    "Our website allows users to log in and generate JSON config files, which are then pushed directly to their GitHub repositories. "
    "We want to avoid cloning the repository and ensure that pushes occur using the user’s own credentials. "
    "Below are the various approaches I have evaluated."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(2), use_case_text, font_size=16)

# Slide 4: Personal Access Tokens (PATs)
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Personal Access Tokens (PATs)"
pat_text = (
    "How It Works:\n"
    "• The user generates a Personal Access Token from GitHub and provides it to our website.\n"
    "• Our system uses this token to push the JSON file via GitHub’s API.\n\n"
    "Pros:\n"
    "• Directly tied to the user’s account.\n"
    "• Simple to implement using standard REST API calls.\n\n"
    "Cons:\n"
    "• Risk of token exposure – we must handle them very carefully.\n"
    "• Requires users to manually generate and manage their tokens.\n"
    "• Company API restrictions might further complicate this approach."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(4), pat_text, font_size=16)

# Slide 5: OAuth Apps
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "OAuth Apps"
oauth_text = (
    "How It Works:\n"
    "• Our website would redirect the user to GitHub’s OAuth consent page.\n"
    "• After approval, GitHub returns an access token to our system.\n"
    "• This token is then used to push the JSON file from the user’s account.\n\n"
    "Pros:\n"
    "• Offers a secure and managed authorization process with limited scopes.\n"
    "• Token lifecycle (refresh, revoke) is handled by OAuth.\n\n"
    "Cons:\n"
    "• More complex implementation (handling redirects, token exchange, etc.).\n"
    "• Currently, our company’s API restrictions are a major blocker for this approach.\n"
    "• Additional internal approvals are needed before this can be used."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(4.5), oauth_text, font_size=16)

# Slide 6: API Access Blocker for OAuth
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "API Access Blocker for OAuth Apps"
blocker_text = (
    "Main Blocker:\n"
    "• At present, our team does not have the necessary API access to implement OAuth Apps fully.\n\n"
    "Next Steps:\n"
    "• I have discussed this with the responsible team.\n"
    "• Once we receive the required API clearance, we can move forward with this method.\n\n"
    "This remains our primary blocker for OAuth implementation."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(4), blocker_text, font_size=16)

# Slide 7: GitHub Apps
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "GitHub Apps"
github_apps_text = (
    "How It Works:\n"
    "• The user installs a GitHub App on their account or organization.\n"
    "• The app generates installation tokens with fine-grained permissions to push the JSON file.\n\n"
    "Pros:\n"
    "• Granular permission control and enhanced security.\n"
    "• Detailed audit logs of all operations.\n\n"
    "Cons:\n"
    "• Requires users to install the app, adding a bit of onboarding friction.\n"
    "• Actions might appear as coming from the app rather than directly from the user.\n"
    "• Our API restrictions may also affect this approach."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(4.5), github_apps_text, font_size=16)

# Slide 8: Git CLI
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Git CLI"
git_cli_text = (
    "How It Works:\n"
    "• The system uses Git command-line operations (clone, commit, push) to update repositories.\n\n"
    "Pros:\n"
    "• Full control over Git operations and commit history.\n"
    "• Familiar process for those used to Git workflows.\n\n"
    "Cons:\n"
    "• Involves cloning the repository, which contradicts our requirement for direct push.\n"
    "• More resource-intensive with potential complexities in error handling.\n"
    "• Company restrictions on cloning and API usage make this option less attractive."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(4.5), git_cli_text, font_size=16)

# Slide 9: Conclusion & Recommendations
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Conclusion & Recommendations"
conclusion_text = (
    "After reviewing the options, here’s my take:\n\n"
    "• PATs: Simple and directly tied to the user but require careful token management and are affected by API restrictions.\n\n"
    "• OAuth Apps: More secure and streamlined but are currently blocked by our company’s API restrictions. Once we get clearance, this would be my preferred method.\n\n"
    "• GitHub Apps: Offer excellent control and security but may not always reflect actions from the user’s account directly.\n\n"
    "• Git CLI: Provides full Git control, but its cloning requirement and resource demands make it less suitable.\n\n"
    "I recommend we work with our internal teams to resolve the API access issues, especially for OAuth Apps."
)
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(5), conclusion_text, font_size=16)

# Slide 10: Q&A
slide = prs.slides.add_slide(prs.slide_layouts[1])
slide.shapes.title.text = "Q&A"
add_textbox(slide, Inches(0.5), Inches(1.5), Inches(9), Inches(2), "Questions & Discussion", font_size=20)

# Save the presentation to a file
prs.save("github_integration_options_updated.pptx")
print("Presentation created and saved as 'github_integration_options_updated.pptx'")
